import pandas as pd
import streamlit as st
from streamlit_option_menu import option_menu
from streamlit_gsheets import GSheetsConnection
from datetime import date

challenge_table_name = "challenges"
users_table_name = "users"

st.set_page_config(page_title="Admin Page", page_icon="üìà", layout="wide")

conn = st.connection("gsheets", type=GSheetsConnection)

# initialize session variables
if "task_description" not in st.session_state:
    st.session_state.task_description = ""
    st.session_state.task_award = ""
    st.session_state.task_planned_time = ""

# rewrite values into
def update_table():

    st.session_state.task_description = st.session_state.task_disc_widget
    st.session_state.task_award = st.session_state.task_award_widget
    st.session_state.task_planned_time = st.session_state.task_planned_time_widget

    # clean text fields
    st.session_state.task_disc_widget = None
    st.session_state.task_award_widget = None
    st.session_state.task_planned_time_widget = None


with st.sidebar:
    selected = option_menu("M8Agensy", ["–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", "–ó–∞–¥–∞—á–∏", "–ù–∞–≥—Ä–∞–¥—ã", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"],
                           icons=['house', "list-task", "award"], menu_icon="cast", default_index=0)
if selected == "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏":
    st.subheader("–†–µ–¥–∞–∫—Ç–æ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
    st.info("–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–¥–∞—á —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º")
    data = conn.read(worksheet=users_table_name, usecols=list(range(5)))
    user_df = data.dropna(subset=["user_id"])
    st.dataframe(user_df, use_container_width=True, hide_index=True)
elif selected == "–ó–∞–¥–∞—á–∏":
    st.subheader("–†–µ–¥–∞–∫—Ç–æ—Ä –∑–∞–¥–∞—á")
    st.info("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    data = conn.read(worksheet=challenge_table_name, usecols=list(range(8)))
    df = data.dropna(subset=["task_id"])

    st.dataframe(df, use_container_width=True,
                 column_config={
                     "task_id": "ID",
                     "task_description": "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏",
                     "task_award": st.column_config.NumberColumn(label="–ù–∞–≥—Ä–∞–¥–∞",
                                                                 help="–ë–∞–ª–ª—ã –∑–∞ –≤—ã–ø–æ–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏",
                                                                 format="%d"),
                     "task_planned_time_completion": st.column_config.NumberColumn(label="–í—Ä–µ–º—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
                                                                                   help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π, –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏",
                                                                                   format="%d"),
                     "task_active": st.column_config.CheckboxColumn(label="–ó–∞–¥–∞—á–∞ –≤ —Å–ø–∏—Å–∫–µ?",
                                                                    help="–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–¥–∞—á—É —Å–¥–µ–ª–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ–π –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –¥–ª—è –≤—ã–±–æ—Ä–∞",
                                                                    default=False
                                                                    ),
                     "task_date_creation": st.column_config.DateColumn(label="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è",
                                                                       help="–î–∞—Ç–∞, –∫–æ–≥–¥–∞ –∑–∞–¥–∞—á–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ",
                                                                       format="DD.MM.YYYY"),
                     "task_last_update": st.column_config.DateColumn(label="–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
                                                                     help="–î–∞—Ç–∞, –∫–æ–≥–¥–∞ –∑–∞–¥–∞—á–∞ –±—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑",
                                                                     format="DD.MM.YYYY")
                 },
                 hide_index=True
                 )
    col1, col2 = st.columns(2)
    new_task = dict()
    new_task_df = pd.DataFrame()
    with col1:
        st.text_area(label="–ó–∞–¥–∞—á–∞", key="task_disc_widget",
                     placeholder="–û–ø–∏—à–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–æ –∑–∞–¥–∞—á—É",
                     max_chars=200, height=180)
    with col2:
        st.number_input(label="–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
                        key="task_award_widget",
                        min_value=0, value=None, step=1,
                        placeholder="–í–≤–µ–¥—Ç–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤")
        st.number_input(label="–í—Ä–µ–º—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
                        key="task_planned_time_widget",
                        min_value=0, value=None, step=1,
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–æ–≤ –¥–Ω–µ–π...")
        add_new_task = st.button(label="–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É –≤ –±–∞–∑—É", on_click=update_table)
    if add_new_task:
        new_task_active = True
        new_task_date_creation = date.today()
        new_task_id = df["task_id"].max() + 1
        new_task = {
            "task_id": new_task_id,
            "task_description": st.session_state.task_description,
            "task_award": st.session_state.task_award,
            "task_planned_time_completion": st.session_state.task_planned_time,
            "task_active": new_task_active,
            "task_date_creation": new_task_date_creation,
            "task_last_update": new_task_date_creation,
            "task_category": None
        }
        new_task_df = pd.DataFrame([new_task])
        df = pd.concat([df, new_task_df], ignore_index=True)
        df = conn.update(worksheet=challenge_table_name, data=df)
        st.cache_data.clear()
        st.experimental_rerun()
elif selected == "–ù–∞–≥—Ä–∞–¥—ã":
    st.subheader("–†–µ–¥–∞–∫—Ç–æ—Ä –Ω–∞–≥—Ä–∞–¥")
    st.info("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
elif selected == "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞":
    st.subheader("–†–∞–∑–¥–µ–ª –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º")
    st.info("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º")
